<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.ReturnListMapper">

    <insert id="addReturnList" useGeneratedKeys="true" keyProperty="returnListId">
        insert into t_return_list(return_number,
                    return_date,
                    amount_paid,
                    amount_payable,
                    remarks,
                    state,
                    supplier_id,
                    user_id)
        values(#{returnNumber},#{returnDate},#{amountPaid},#{amountPayable},#{remarks},#{state},#{supplierId},#{userId})

    </insert>

    <!--修改状态-->
    <update id="updateState">
        update t_return_list set state =1 where return_list_id = #{returnListId}
    </update>

    <!-- 退货单列表展示（可条件查询：单据号模糊、供应商、是否付款和日期区间）-->
    <select id="findList" resultType="com.atguigu.jxc.entity.ReturnList">
        select return_list_id,
        return_number,
        return_date,
        amount_paid,
        amount_payable,
        remarks,
        state,
        supplier_id,
        user_id
        from t_return_list
        <where>
            <if test="returnNumber != null and returnNumber != ''">
                return_number = #{returnNumber}
            </if>

            <if test="supplierId != null and supplierId != ''">
                and supplier_id =#{supplierId}
            </if>

            <if test="state != null and state != ''">
                and state =#{state}
            </if>
            and return_date between #{sTime} and #{eTime}
        </where>
    </select>

    <select id="count" resultType="java.util.Map">
            SELECT
              pl.`return_number` number,
              pl.`return_date` `date`,
              s.`supplier_name` supplierName,
              plg.`goods_code` `code`,
              plg.`goods_name` `name`,
              plg.`goods_model` `model`,
              gt.`goods_type_name` goodsType,
              plg.`goods_unit` unit,
              plg.`price`,
              plg.`goods_num` num,
              plg.`total`
            FROM
              `t_return_list` pl
              INNER JOIN `t_return_list_goods` plg
                ON pl.`return_list_id` = plg.`return_list_id`
              INNER JOIN `t_supplier` s
                ON pl.`supplier_id` = s.`supplier_id`
              INNER JOIN `t_goods_type` gt
                ON plg.`goods_type_id` = gt.`goods_type_id`
        <where>
            return_date between #{sTime} and #{eTime}
            <if test="goodsTypeId != null and goodsTypeId!=''">
                and plg.`goods_type_id` = #{goodsTypeId}
            </if>
            <if test="codeOrName !=null and codeOrName!=''">
                and plg.`goods_code` LIKE CONCAT('%', #{codeOrName} ,'%')
                OR plg.`goods_name` LIKE CONCAT('%', #{codeOrName} ,'%')
            </if>

        </where>
    </select>
</mapper>